# Librerias
import os as os
import speedtest
from time import sleep
from tqdm import tqdm
from colorama import Fore, init
import psutil 
import time



# Velocidad de internet
#Internet
init(autoreset=True)

print(Fore.GREEN + "OBTENIENDO LOS DATOS DEL SERVIDOR, VELOCIDAD DE CARGA Y DESCARGA.....")

# Para llamar al speedtest
st = speedtest.Speedtest()

st.download()  # Velocidad de descarga
for i in tqdm(range(10), colour="cyan", desc="Obteniendo la velocidad de descarga"):
    sleep(0.05)

st.upload()  # Velocidad de carga
for i in tqdm(range(10), colour="red", desc="Obteniendo la velocidad carga"):
    sleep(0.05)

# Guarda todos los elementos en un diccionario
res_dict = st.results.dict()

# Asignar a variables con un formato espec�fico
dwnl = str(res_dict['download'])[:2] + "." + \
    str(res_dict['download'])[2:4]

upl = str(res_dict['upload'])[:2] + "." + str(res_dict['upload'])[2:4]

# Para que se vea mas ordenado
print("")

# Para dividir - una l�nea en la pantalla con un ancho fijo
print(Fore.MAGENTA + "="*80)
print(Fore.GREEN + "RESULTADOS DE LAS PRUEBAS DE VELOCIDAD DE INTERNET :".center(80))
print(Fore.MAGENTA + "="*80)
print(Fore.YELLOW +
      f"Descarga: {dwnl}mbps({float(dwnl)*0.125:.2f}MBs) | Carga:{upl}mbps ({float(upl)*0.125:.2f}MBs)")
print(Fore.MAGENTA + "-"*80)
print(Fore.CYAN +
      f"Latencia: {res_dict['server']['latency']:.2f}".center(80))
print(Fore.MAGENTA + "-"*80)

#Obteniendo la fecha y la hora actual
Fecha = time.strftime("%d/%m/%y ")
Hora  = time.strftime("%H:%M:%S ")
print (Fecha + " " + Hora)

print("======================================================================")


cpu = psutil.cpu_percent (1) # tasa de uso de CPU en un segundo, unidad
# Llamar a la memoria ram
ram = psutil.virtual_memory()[2]


# Llamar al disco 
disk_usage = psutil.disk_usage("/")

# definir y convertir los bytes en gb 
def to_gb(bytes):
    "Convierte bytes a gigabytes."
    return bytes / 1024**3

# Mostrar el espacio total, libre y el porcentaje del espacio usado(Esto no se envia al correo) 
print("Espacio total: {:.2f} GB.".format(to_gb(disk_usage.total)))
print("Espacio libre: {:.2f} GB.".format(to_gb(disk_usage.free)))
print("Espacio usado: {:.2f} GB.".format(to_gb(disk_usage.used)))
print("Porcentaje de espacio usado: {}%.".format(disk_usage.percent))
     



print("======================================================================")
# Disco usado
if disk_usage.percent <=80.0:  
    print (f"El espacio del disco esta bien es del: {disk_usage.percent}%")  
else:
     
    print (f"Porcentaje de espacio usado es del: {disk_usage.percent}%")  
    # Enviar correo                                                                                       # Destinatario   
    print (os.system(f'echo "Se ha usado el: {disk_usage.percent}% del disco " |  mutt -s "ALERTA DISCO" alejandro.murillo1517@gmail.com'))
    print ("ALERTA ENVIADA")
print("======================================================================")


# Memoria ram
if ram >= 90.0:
    print (f"La memoria ram esta bien es del: {ram}%")
else:    
    print (f"La memoria ram esta alta, es del: {ram} % ") 
    # Enviar correo                                                            # Destinatario
    print (os.system(f'echo "La RAM es del: {ram}%  " |  mutt -s "ALERTA RAM " alejandro.murillo1517@gmail.com'))  	    
    print ("ALERTA ENVIADA")
print("======================================================================")
#CPU
if cpu <= 20.0:
    print (f"La CPU esta bien es del: {cpu}%")
else:    
    print (f"La cpu esta alta, es del: {cpu}% ")
    # Enviar correo                                                          # Destinatario
    print (os.system(f'echo "La CPU es del: {cpu}% " |  mutt -s "ALERTA CPU" alejandro.murillo1517@gmail.com')) 
    print ("ALERTA ENVIADA")  
print("======================================================================")